# Generated by Django 3.2.20 on 2023-08-16 12:58

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.utils.timezone
import guardian.mixins
import lj_common_shared_service.utils.file
import uuid


# Functions from the following migrations need manual copying.
# Move them and any dependencies into this file, then update the
# RunPython operations to refer to the local versions:
# lj_common_shared_service.authentication.migrations.0007_auto_20220506_1803
# lj_common_shared_service.authentication.migrations.0009_auto_20220719_2003
# lj_common_shared_service.authentication.migrations.0010_auto_20220809_1924
# lj_common_shared_service.authentication.migrations.0015_auto_20221121_1702
# lj_common_shared_service.authentication.migrations.0017_ljuser_uuid
# lj_common_shared_service.authentication.migrations.0020_auto_20230228_1807
# lj_common_shared_service.authentication.migrations.0023_auto_20230621_1501

DATE_CREATED = 'Date created'
DATE_MODIFIED = 'Date modified'
ORGANIZATION_TEAM_MEMBER = 'Organization team member'
AUTH_ORGANIZATION_CLASS = 'authentication.ljorganization'
ORGANIZATION_EDITOR = 'Organization editor'

class Migration(migrations.Migration):
    replaces = [('authentication', '0001_initial'), ('authentication', '0002_ljuser_auth0_user_id'),
                ('authentication', '0003_ljuser_is_public'), ('authentication', '0004_ljuser_picture'),
                ('authentication', '0005_ljuser_points'), ('authentication', '0006_ljuser_is_public_contribution'),
                ('authentication', '0007_auto_20220506_1803'),
                ('authentication', '0008_ljorganization_has_public_data'),
                ('authentication', '0009_auto_20220719_2003'), ('authentication', '0010_auto_20220809_1924'),
                ('authentication', '0011_auto_20220919_1750'), ('authentication', '0012_auto_20220919_1829'),
                ('authentication', '0013_auto_20221101_2109'),
                ('authentication', '0014_ljorganizationteammember_is_organization_creator'),
                ('authentication', '0015_auto_20221121_1702'), ('authentication', '0016_ljuser_description'),
                ('authentication', '0017_ljuser_uuid'), ('authentication', '0018_auto_20230209_1557'),
                ('authentication', '0019_auto_20230209_1600'), ('authentication', '0020_auto_20230228_1807'),
                ('authentication', '0021_auto_20230302_1804'),
                ('authentication', '0022_ljorganizationapplicationpermission'),
                ('authentication', '0023_auto_20230621_1501'), ('authentication', '0024_auto_20230703_1632')]

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='LJOrganization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255, verbose_name='Name')),
                ('jots_limit_number', models.PositiveIntegerField(default=0, verbose_name='Number of jots allowed')),
                ('apps_limit_number',
                 models.PositiveIntegerField(default=0, verbose_name='Number of applications allowed')),
                ('play_apps_limit_number',
                 models.PositiveIntegerField(default=0, verbose_name='Number of play of apps allowed')),
                ('invitation_code', models.CharField(blank=True, db_index=True, max_length=1024, null=True, unique=True,
                                                     verbose_name='Invitation code')),
                ('status', models.CharField(choices=[('0', 'Hold'), ('1', 'Active')], default='0', max_length=255,
                                            verbose_name='Status')),
                ('photo', models.ImageField(default=None, null=True,
                                            upload_to=lj_common_shared_service.utils.file.LJRandomFileName(''),
                                            verbose_name='Logo')),
                ('is_validate_email', models.BooleanField(default=False,
                                                          help_text='Check if the mail is not in the blacklist - https://knowledge.hubspot.com/forms/what-domains-are-blocked-when-using-the-forms-email-domains-to-block-feature',
                                                          verbose_name='Validate mails')),
                ('uuid',
                 models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='Unique UUID hash')),
            ],
            options={
                'verbose_name': 'Organization',
                'verbose_name_plural': 'Organizations',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='LJUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False,
                                                     help_text='Designates that this user has all permissions without explicitly assigning them.',
                                                     verbose_name='superuser status')),
                ('username', models.CharField(default=None, max_length=255, null=True, verbose_name='username')),
                ('email', models.EmailField(db_index=True, max_length=255, unique=True, verbose_name='email address')),
                ('full_name',
                 models.CharField(blank=True, default=None, max_length=100, null=True, verbose_name='Full name')),
                ('company',
                 models.CharField(blank=True, default=None, max_length=100, null=True, verbose_name='Company')),
                ('is_staff', models.BooleanField(default=False,
                                                 help_text='Designates whether the user can log into this admin site.',
                                                 verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True,
                                                  help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.',
                                                  verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_pending_deletion', models.BooleanField(default=False,
                                                            help_text='Designates whether the user has requested full account deletion',
                                                            verbose_name='pending deletion')),
                ('job_title',
                 models.CharField(blank=True, default=None, max_length=100, null=True, verbose_name='Job title')),
                ('referral', models.CharField(blank=True, default=None, max_length=255, null=True,
                                              verbose_name='How did you hear about us?')),
                ('is_organization_admin', models.BooleanField(default=False, verbose_name='Organization admin')),
                ('is_organization_editor', models.BooleanField(default=False, verbose_name=ORGANIZATION_EDITOR)),
                ('pin_code', models.PositiveIntegerField(default=1000,
                                                         validators=[django.core.validators.MinValueValidator(1000),
                                                                     django.core.validators.MaxValueValidator(9999)],
                                                         verbose_name='Pin code')),
                ('groups', models.ManyToManyField(blank=True,
                                                  help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.',
                                                  related_name='user_set', related_query_name='user', to='auth.Group',
                                                  verbose_name='groups')),
                ('organization',
                 models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                   related_name='organization_user', to=AUTH_ORGANIZATION_CLASS)),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.',
                                                            related_name='user_set', related_query_name='user',
                                                            to='auth.Permission', verbose_name='user permissions')),
                ('auth0_user_id',
                 models.CharField(blank=True, default=None, max_length=100, null=True, verbose_name='Auth0 user ID')),
                ('is_public', models.BooleanField(default=False, verbose_name='Public account')),
                ('picture', models.ImageField(default=None, null=True,
                                              upload_to=lj_common_shared_service.utils.file.LJRandomFileName(''),
                                              verbose_name='Avatar')),
                ('points', models.PositiveIntegerField(default=0, verbose_name='Earned points')),
                ('is_public_contribution', models.BooleanField(default=True, verbose_name='Public contribution shown')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'Users',
                'abstract': False,
                'swappable': 'AUTH_USER_MODEL',
            },
            bases=(models.Model, guardian.mixins.GuardianUserMixin),
        ),
        migrations.AddField(
            model_name='ljorganization',
            name='has_public_data',
            field=models.BooleanField(default=False, verbose_name='Contains public data to expose'),
        ),
        migrations.AlterField(
            model_name='ljuser',
            name='is_organization_editor',
            field=models.BooleanField(default=True, verbose_name=ORGANIZATION_EDITOR),
        ),
        migrations.AlterModelOptions(
            name='ljuser',
            options={'verbose_name': 'User', 'verbose_name_plural': 'Users'},
        ),
        migrations.CreateModel(
            name='LJOrganizationTeamMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organization',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organization_team_member',
                                   to=AUTH_ORGANIZATION_CLASS, verbose_name='Team member organization')),
                ('user',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organization_team_member',
                                   to=settings.AUTH_USER_MODEL, verbose_name=ORGANIZATION_TEAM_MEMBER)),
            ],
            options={
                'verbose_name': ORGANIZATION_TEAM_MEMBER,
                'verbose_name_plural': 'Organization team members',
            },
        ),
        migrations.AddField(
            model_name='ljorganizationteammember',
            name='is_organization_admin',
            field=models.BooleanField(default=False, verbose_name='Organization admin'),
        ),
        migrations.AddField(
            model_name='ljorganizationteammember',
            name='is_organization_editor',
            field=models.BooleanField(default=True, verbose_name=ORGANIZATION_EDITOR),
        ),
        migrations.AddField(
            model_name='ljorganization',
            name='address',
            field=models.CharField(blank=True, default=None, max_length=1024, null=True, verbose_name='Address'),
        ),
        migrations.AddField(
            model_name='ljorganization',
            name='team_name',
            field=models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='Team name'),
        ),
        migrations.AddField(
            model_name='ljorganizationteammember',
            name='is_organization_creator',
            field=models.BooleanField(default=False, verbose_name='Organization creator'),
        ),
        migrations.AddField(
            model_name='ljorganization',
            name='deleted',
            field=models.DateTimeField(editable=False, null=True),
        ),
        migrations.AddField(
            model_name='ljuser',
            name='deleted',
            field=models.DateTimeField(editable=False, null=True),
        ),
        migrations.AddField(
            model_name='ljuser',
            name='description',
            field=models.TextField(blank=True, default=None, null=True, verbose_name='Description'),
        ),
        migrations.AddField(
            model_name='ljuser',
            name='uuid',
            field=models.UUIDField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='ljuser',
            name='uuid',
            field=models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='Unique UUID hash'),
        ),
        migrations.AddField(
            model_name='ljuser',
            name='date_created',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now,
                                       verbose_name=DATE_CREATED),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='ljuser',
            name='date_modified',
            field=models.DateTimeField(auto_now=True, verbose_name=DATE_MODIFIED),
        ),
        migrations.AddField(
            model_name='ljorganizationteammember',
            name='date_created',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now,
                                       verbose_name=DATE_CREATED),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='ljorganizationteammember',
            name='date_modified',
            field=models.DateTimeField(auto_now=True, verbose_name=DATE_MODIFIED),
        ),
        migrations.AlterModelOptions(
            name='ljorganizationteammember',
            options={'get_latest_by': 'date_created', 'verbose_name': ORGANIZATION_TEAM_MEMBER,
                     'verbose_name_plural': 'Organization team members'},
        ),
        migrations.CreateModel(
            name='LJOrganizationApplicationPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name=DATE_CREATED)),
                ('date_modified', models.DateTimeField(auto_now=True, verbose_name=DATE_MODIFIED)),
                ('application',
                 models.CharField(blank=True, choices=[('0', 'SID'), ('1', 'Easy Tray'), ('2', 'AID')], default=None,
                                  max_length=10, null=True, verbose_name='Application')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                                                   related_name='organization_application_permission',
                                                   to=AUTH_ORGANIZATION_CLASS,
                                                   verbose_name='Organization application permission')),
            ],
            options={
                'abstract': False,
                'get_latest_by': 'date_created',
                'verbose_name': 'Organization application access',
                'verbose_name_plural': 'Organization application accesses',
            },
        ),
        migrations.AlterField(
            model_name='ljorganization',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='ljorganizationapplicationpermission',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='ljorganizationteammember',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='ljuser',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
    ]
